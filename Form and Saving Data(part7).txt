We will be basically creating a form to save the form data to a database. We will use 2 functions. create and store

Create
======

 public function create()
    {
        //
        return view('posts.create');
    }

For creating form we have used laravelcollective.See installation details from here
https://laravelcollective.com/docs/5.4/html#


create.blade.php
@extends('layouts.app')
@section('content')
<h1>Create Post</h1>
       
{!! Form::open(['action' => 'PostsController@store']) !!}
       <div class="form-group">
            {{Form::label('title', 'Title')}}
            {{ Form::text('title','',['class' => 'form-control'])}}
       </div>

       <div class="form-group">
            {{Form::label('body', 'Body')}}
            {{ Form::textarea('title','',['class' => 'form-control'])}}
       </div>

       <div class="form-group">
            {{Form::submit('Submit',['class' => 'btn btn-primary'])}}
       </div>
@endsection

Validation
========
We will validate in the place where we submit. In /store.

 public function store(Request $request)
    {
        $this->validate($request,[
            'title' => 'required',//name of the field should match with the fieldname used in blade
            'body' => 'required'
        ]);
        return 123;
    }

    So if you enter the data it shows return 123 else it redirects to the create page

    Create error messages
    ==================
    Steps
    a)Create inc/messages.blade.php
    b)Add this
    @if(count($errors)>0)
    @foreach($errors->all() as $error)
        <div class="alert alert-danger alert-dismissible">
            {{$error}}
        </div>
    @endforeach
@endif


@if(session('success'))

        <div class="alert alert-success alert-dismissible">
                {{session('success')}}
        </div>

@endif

@if(session('error'))

        <div class="alert alert-danger alert-dismissible">
                {{session('success')}}
        </div>

@endif

Add data
========
        PostsController.php

        //Create New Post
        $posts=new Posts;//as App/Posts is added. Same like tinker
        $posts->title=$request->input('title');
        $posts->body=$request->input('body');

        $posts->save();

        return redirect('/posts')->with('success','Post Created');

Add link for create post in navbar
=========================
<ul class="nav navbar-nav navbar-right">
            <li><a href="../posts/create">Create Post</a></li>
</ul>

Implement CKeditor
=================
Steps
a)Go to https://github.com/UniSharp/laravel-ckeditor. Follow installation steps
b)Add <script src="/vendor/unisharp/laravel-ckeditor/ckeditor.js"></script>
    <script>
        CKEDITOR.replace( 'article-ckeditor' );
    </script>
    to our layouts
c)We will add it into our body(textarea).   {{ Form::textarea('body','',['id' => 'article-ckeditor', 'class' => 'form-control'])}}
d)If you add some text now, it will show in the HTML format. We need to parse it.
To Parse body we will do this
{{ $post->body }}
TO
{!! $post->body !!}
